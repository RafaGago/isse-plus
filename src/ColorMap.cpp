/*
 Copyright 2013 Stanford University
 Distributed under the terms of the Gnu General Public License
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 Copyright 2013 Adobe Systems Incorporated
 Distributed under the terms of the Gnu General Public License
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
// Authors: Nicholas J. Bryan

#include "ColorMap.h"

const int ColorMap::cmLength = sizeof(ColorMap::PURPLE)/(3*sizeof(uint8));



ColorMap::ColorMap()
{
    COLOR = (uint8 *)PURPLE;
    colorMapType = purpleColorMap;
    maxValue = 1;
    minValue = 0;
}

void ColorMap::colorSwitch(uint8 *&C, ColorMapType type)
{
    switch(type)
    {
        case purpleColorMap:
            C = (uint8 *)PURPLE;
            break;
        case blackAndWhiteColorMap:
            C = (uint8 *)BLACKANDWHITE;
            break;
        case jetColorMap:
            C = (uint8 *)JET;
            break;
        case coolColorMap:
            C = (uint8 *)COOL;
            break;
        case hotColorMap:
            C = (uint8 *)HOT;
            break;
        case hueSaturationColorMap:
            C = (uint8*)HSV;
            break;
        case springColorMap:
            C = (uint8*)SPRING;
            break;
        case summerColorMap:
            C = (uint8*)SUMMER;
            break;
        case autumnColorMap:
            C = (uint8*)AUTUMN;
            break;
        case winterColorMap:
            C = (uint8*)WINTER;
            break;
        case boneColorMap:
            C = (uint8*)BONE;
            break;
        case copperColorMap:
            C = (uint8*)COPPER;
            break;
        case pinkColorMap:
            C = (uint8*)PINK;
            break;
        case whiteAndBlackColorMap:
            C = (uint8*)WHITEANDBLACK;
            break;
        default:
            C = (uint8 *)PURPLE;
            break;
    };
}

void ColorMap::setColorMap(ColorMapType type)
{
    colorSwitch(COLOR, type);
    colorMapType = type;
}

void ColorMap::setMaxAndMin(float max, float min)
{
    maxValue = max;
    minValue = min;
};

Colour ColorMap::getColor(float v, Colour c)
{
    if(minValue==maxValue)
        return Colour();
    
    return c.withBrightness(((v-minValue)/(maxValue-minValue)));
}

 
Colour ColorMap::getColor(float v, float vmin, float vmax)
{
    
    if(vmin==vmax)
        return Colour();
    
   
    
    int index = ((v-vmin)/(vmax-vmin))*(cmLength-1);

    return Colour(COLOR[index*3],
                  COLOR[index*3+1],
                  COLOR[index*3+2]);
}
    
Colour ColorMap::getColor(float v, float vmin, float vmax, ColorMapType type)
{
    uint8 *C = NULL;
    
    colorSwitch(C, type);
    
    if(vmin==vmax)
        return Colour();
    

    int index = ((v-vmin)/(vmax-vmin))*(cmLength-1);

    return Colour(COLOR[index*3],
                  COLOR[index*3+1],
                  COLOR[index*3+2]);
}

Colour ColorMap::getColor(float v, float vmin, float vmax, Colour c)
{
    
    if(vmin==vmax)
        return Colour();
    
    return c.withBrightness(((v-vmin)/(vmax-vmin)));
}

std::map<ColorMap::ColorMapType, std::string> ColorMap::getAllColorMaps()
{
    std::map<ColorMap::ColorMapType, std::string> m;
    
    m[purpleColorMap] = "Purple";
    m[jetColorMap] = "Jet";
    m[blackAndWhiteColorMap] = "Black and White";
    m[whiteAndBlackColorMap] = "White and Black";
    m[coolColorMap] = "Cool";
    m[hotColorMap] = "Hot";
    m[hueSaturationColorMap] = "Hue Saturation";
    m[springColorMap] = "Spring";
    m[summerColorMap] = "Summer";
    m[autumnColorMap] = "Autumn";
    m[winterColorMap] = "Winter";
    m[boneColorMap]   = "Bone";
    m[copperColorMap] = "Copper";
    m[pinkColorMap]   = "Pink";
    
    return m;
}


const uint8 ColorMap::WHITEANDBLACK[]={
    255,255,255,
    252,252,252,
    249,249,249,
    245,245,245,
    242,242,242,
    238,238,238,
    235,235,235,
    232,232,232,
    228,228,228,
    225,225,225,
    221,221,221,
    218,218,218,
    215,215,215,
    211,211,211,
    208,208,208,
    204,204,204,
    197,197,197,
    189,189,189,
    181,181,181,
    173,173,173,
    165,165,165,
    158,158,158,
    150,150,150,
    142,142,142,
    134,134,134,
    126,126,126,
    119,119,119,
    111,111,111,
    103,103,103,
    95,95,95,
    88,88,88,
    80,80,80,
    79,79,79,
    78,78,78,
    76,76,76,
    75,75,75,
    74,74,74,
    73,73,73,
    72,72,72,
    71,71,71,
    70,70,70,
    68,68,68,
    67,67,67,
    66,66,66,
    65,65,65,
    64,64,64,
    63,63,63,
    59,59,59,
    55,55,55,
    52,52,52,
    48,48,48,
    44,44,44,
    40,40,40,
    37,37,37,
    33,33,33,
    29,29,29,
    26,26,26,
    22,22,22,
    18,18,18,
    14,14,14,
    11,11,11,
    7,7,7,
    3,3,3,
    0,0,0,

};

const uint8 ColorMap::WINTER[] = {
    0,0,255,
    0,4,253,
    0,8,251,
    0,12,249,
    0,16,247,
    0,20,245,
    0,24,243,
    0,28,241,
    0,32,239,
    0,36,237,
    0,40,235,
    0,44,233,
    0,48,231,
    0,52,229,
    0,56,227,
    0,60,225,
    0,65,223,
    0,69,221,
    0,73,219,
    0,77,217,
    0,81,215,
    0,85,213,
    0,89,211,
    0,93,209,
    0,97,207,
    0,101,205,
    0,105,203,
    0,109,201,
    0,113,199,
    0,117,197,
    0,121,195,
    0,125,193,
    0,130,190,
    0,134,188,
    0,138,186,
    0,142,184,
    0,146,182,
    0,150,180,
    0,154,178,
    0,158,176,
    0,162,174,
    0,166,172,
    0,170,170,
    0,174,168,
    0,178,166,
    0,182,164,
    0,186,162,
    0,190,160,
    0,195,158,
    0,199,156,
    0,203,154,
    0,207,152,
    0,211,150,
    0,215,148,
    0,219,146,
    0,223,144,
    0,227,142,
    0,231,140,
    0,235,138,
    0,239,136,
    0,243,134,
    0,247,132,
    0,251,130,
    0,255,127,
};

const uint8 ColorMap::PINK[] = {
    30,0,0,
    50,26,26,
    64,37,37,
    75,45,45,
    85,52,52,
    94,58,58,
    102,64,64,
    110,69,69,
    117,74,74,
    123,79,79,
    130,83,83,
    136,87,87,
    141,91,91,
    147,94,94,
    152,98,98,
    158,101,101,
    163,105,105,
    167,108,108,
    172,111,111,
    177,114,114,
    181,117,117,
    185,120,120,
    190,123,123,
    194,126,126,
    196,132,129,
    197,138,131,
    199,144,134,
    201,149,136,
    203,154,139,
    204,159,141,
    206,164,144,
    208,169,146,
    209,174,148,
    211,178,151,
    213,183,153,
    214,187,155,
    216,191,158,
    217,195,160,
    219,200,162,
    221,203,164,
    222,207,166,
    224,211,168,
    225,215,170,
    227,219,172,
    228,222,174,
    230,226,176,
    231,229,178,
    233,233,180,
    234,234,186,
    236,236,191,
    237,237,196,
    239,239,202,
    240,240,207,
    242,242,212,
    243,243,216,
    244,244,221,
    246,246,226,
    247,247,230,
    249,249,235,
    250,250,239,
    251,251,243,
    253,253,247,
    254,254,251,
    255,255,255,
};

const uint8 ColorMap::COPPER[] = {
    0,0,0,
    5,3,2,
    10,6,4,
    15,9,6,
    20,12,8,
    25,15,10,
    30,19,12,
    35,22,14,
    40,25,16,
    45,28,18,
    50,31,20,
    55,34,22,
    60,38,24,
    66,41,26,
    71,44,28,
    76,47,30,
    81,50,32,
    86,53,34,
    91,57,36,
    96,60,38,
    101,63,40,
    106,66,42,
    111,69,44,
    116,73,46,
    121,76,48,
    126,79,50,
    132,82,52,
    137,85,54,
    142,88,56,
    147,92,58,
    152,95,60,
    157,98,62,
    162,101,64,
    167,104,66,
    172,107,68,
    177,111,70,
    182,114,72,
    187,117,74,
    193,120,76,
    198,123,78,
    203,126,80,
    208,130,82,
    213,133,84,
    218,136,86,
    223,139,88,
    228,142,90,
    233,146,92,
    238,149,95,
    243,152,97,
    248,155,99,
    253,158,101,
    255,161,103,
    255,165,105,
    255,168,107,
    255,171,109,
    255,174,111,
    255,177,113,
    255,180,115,
    255,184,117,
    255,187,119,
    255,190,121,
    255,193,123,
    255,196,125,
    255,199,127,
};

const uint8 ColorMap::BONE[] = {
    0,0,1,
    3,3,6,
    7,7,11,
    10,10,15,
    14,14,20,
    17,17,25,
    21,21,30,
    24,24,35,
    28,28,40,
    31,31,45,
    35,35,50,
    39,39,55,
    42,42,59,
    46,46,64,
    49,49,69,
    53,53,74,
    56,56,79,
    60,60,84,
    63,63,89,
    67,67,94,
    71,71,99,
    74,74,103,
    78,78,108,
    81,81,113,
    85,86,117,
    88,91,120,
    92,96,124,
    95,101,127,
    99,106,131,
    103,111,135,
    106,115,138,
    110,120,142,
    113,125,145,
    117,130,149,
    120,135,152,
    124,140,156,
    127,145,159,
    131,150,163,
    135,155,167,
    138,159,170,
    142,164,174,
    145,169,177,
    149,174,181,
    152,179,184,
    156,184,188,
    159,189,191,
    163,194,195,
    167,199,199,
    172,202,202,
    178,206,206,
    183,209,209,
    189,213,213,
    194,216,216,
    200,220,220,
    205,223,223,
    211,227,227,
    217,231,231,
    222,234,234,
    228,238,238,
    233,241,241,
    239,245,245,
    244,248,248,
    250,252,252,
    255,255,255,
};


const uint8 ColorMap::AUTUMN[] = {
    255,0,0,
    255,4,0,
    255,8,0,
    255,12,0,
    255,16,0,
    255,20,0,
    255,24,0,
    255,28,0,
    255,32,0,
    255,36,0,
    255,40,0,
    255,44,0,
    255,48,0,
    255,52,0,
    255,56,0,
    255,60,0,
    255,65,0,
    255,69,0,
    255,73,0,
    255,77,0,
    255,81,0,
    255,85,0,
    255,89,0,
    255,93,0,
    255,97,0,
    255,101,0,
    255,105,0,
    255,109,0,
    255,113,0,
    255,117,0,
    255,121,0,
    255,125,0,
    255,130,0,
    255,134,0,
    255,138,0,
    255,142,0,
    255,146,0,
    255,150,0,
    255,154,0,
    255,158,0,
    255,162,0,
    255,166,0,
    255,170,0,
    255,174,0,
    255,178,0,
    255,182,0,
    255,186,0,
    255,190,0,
    255,195,0,
    255,199,0,
    255,203,0,
    255,207,0,
    255,211,0,
    255,215,0,
    255,219,0,
    255,223,0,
    255,227,0,
    255,231,0,
    255,235,0,
    255,239,0,
    255,243,0,
    255,247,0,
    255,251,0,
    255,255,0,

};

const uint8 ColorMap::SUMMER[] = {
    0,127,102,
    4,130,102,
    8,132,102,
    12,134,102,
    16,136,102,
    20,138,102,
    24,140,102,
    28,142,102,
    32,144,102,
    36,146,102,
    40,148,102,
    44,150,102,
    48,152,102,
    52,154,102,
    56,156,102,
    60,158,102,
    65,160,102,
    69,162,102,
    73,164,102,
    77,166,102,
    81,168,102,
    85,170,102,
    89,172,102,
    93,174,102,
    97,176,102,
    101,178,102,
    105,180,102,
    109,182,102,
    113,184,102,
    117,186,102,
    121,188,102,
    125,190,102,
    130,193,102,
    134,195,102,
    138,197,102,
    142,199,102,
    146,201,102,
    150,203,102,
    154,205,102,
    158,207,102,
    162,209,102,
    166,211,102,
    170,213,102,
    174,215,102,
    178,217,102,
    182,219,102,
    186,221,102,
    190,223,102,
    195,225,102,
    199,227,102,
    203,229,102,
    207,231,102,
    211,233,102,
    215,235,102,
    219,237,102,
    223,239,102,
    227,241,102,
    231,243,102,
    235,245,102,
    239,247,102,
    243,249,102,
    247,251,102,
    251,253,102,
    255,255,102,
};

const uint8 ColorMap::SPRING[] = {
    255,0,255,
    255,4,251,
    255,8,247,
    255,12,243,
    255,16,239,
    255,20,235,
    255,24,231,
    255,28,227,
    255,32,223,
    255,36,219,
    255,40,215,
    255,44,211,
    255,48,207,
    255,52,203,
    255,56,199,
    255,60,195,
    255,65,190,
    255,69,186,
    255,73,182,
    255,77,178,
    255,81,174,
    255,85,170,
    255,89,166,
    255,93,162,
    255,97,158,
    255,101,154,
    255,105,150,
    255,109,146,
    255,113,142,
    255,117,138,
    255,121,134,
    255,125,130,
    255,130,125,
    255,134,121,
    255,138,117,
    255,142,113,
    255,146,109,
    255,150,105,
    255,154,101,
    255,158,97,
    255,162,93,
    255,166,89,
    255,170,85,
    255,174,81,
    255,178,77,
    255,182,73,
    255,186,69,
    255,190,65,
    255,195,60,
    255,199,56,
    255,203,52,
    255,207,48,
    255,211,44,
    255,215,40,
    255,219,36,
    255,223,32,
    255,227,28,
    255,231,24,
    255,235,20,
    255,239,16,
    255,243,12,
    255,247,8,
    255,251,4,
    255,255,0,
};

const uint8 ColorMap::HSV[] = {
    255,0,0,
    255,23,0,
    255,47,0,
    255,71,0,
    255,95,0,
    255,119,0,
    255,143,0,
    255,167,0,
    255,191,0,
    255,215,0,
    255,239,0,
    247,255,0,
    223,255,0,
    199,255,0,
    175,255,0,
    151,255,0,
    127,255,0,
    103,255,0,
    79,255,0,
    55,255,0,
    31,255,0,
    7,255,0,
    0,255,15,
    0,255,39,
    0,255,63,
    0,255,87,
    0,255,111,
    0,255,135,
    0,255,159,
    0,255,183,
    0,255,207,
    0,255,231,
    0,255,255,
    0,231,255,
    0,207,255,
    0,183,255,
    0,159,255,
    0,135,255,
    0,111,255,
    0,87,255,
    0,63,255,
    0,39,255,
    0,15,255,
    7,0,255,
    31,0,255,
    55,0,255,
    79,0,255,
    103,0,255,
    127,0,255,
    151,0,255,
    175,0,255,
    199,0,255,
    223,0,255,
    247,0,255,
    255,0,239,
    255,0,215,
    255,0,191,
    255,0,167,
    255,0,143,
    255,0,119,
    255,0,95,
    255,0,71,
    255,0,47,
    255,0,23,
};

const uint8 ColorMap::HOT[] = {
    10,0,0,
    21,0,0,
    31,0,0,
    42,0,0,
    53,0,0,
    63,0,0,
    74,0,0,
    85,0,0,
    95,0,0,
    106,0,0,
    117,0,0,
    127,0,0,
    138,0,0,
    149,0,0,
    159,0,0,
    170,0,0,
    181,0,0,
    191,0,0,
    202,0,0,
    213,0,0,
    223,0,0,
    234,0,0,
    245,0,0,
    255,0,0,
    255,10,0,
    255,21,0,
    255,31,0,
    255,42,0,
    255,53,0,
    255,63,0,
    255,74,0,
    255,85,0,
    255,95,0,
    255,106,0,
    255,117,0,
    255,127,0,
    255,138,0,
    255,149,0,
    255,159,0,
    255,170,0,
    255,181,0,
    255,191,0,
    255,202,0,
    255,213,0,
    255,223,0,
    255,234,0,
    255,245,0,
    255,255,0,
    255,255,15,
    255,255,31,
    255,255,47,
    255,255,63,
    255,255,79,
    255,255,95,
    255,255,111,
    255,255,127,
    255,255,143,
    255,255,159,
    255,255,175,
    255,255,191,
    255,255,207,
    255,255,223,
    255,255,239,
    255,255,255,
};


const uint8 ColorMap::COOL[] = {
    
    0,255,255,
    4,251,255,
    8,247,255,
    12,243,255,
    16,239,255,
    20,235,255,
    24,231,255,
    28,227,255,
    32,223,255,
    36,219,255,
    40,215,255,
    44,211,255,
    48,207,255,
    52,203,255,
    56,199,255,
    60,195,255,
    65,190,255,
    69,186,255,
    73,182,255,
    77,178,255,
    81,174,255,
    85,170,255,
    89,166,255,
    93,162,255,
    97,158,255,
    101,154,255,
    105,150,255,
    109,146,255,
    113,142,255,
    117,138,255,
    121,134,255,
    125,130,255,
    130,125,255,
    134,121,255,
    138,117,255,
    142,113,255,
    146,109,255,
    150,105,255,
    154,101,255,
    158,97,255,
    162,93,255,
    166,89,255,
    170,85,255,
    174,81,255,
    178,77,255,
    182,73,255,
    186,69,255,
    190,65,255,
    195,60,255,
    199,56,255,
    203,52,255,
    207,48,255,
    211,44,255,
    215,40,255,
    219,36,255,
    223,32,255,
    227,28,255,
    231,24,255,
    235,20,255,
    239,16,255,
    243,12,255,
    247,8,255,
    251,4,255,
    255,0,255,
};


const uint8 ColorMap::JET[] = {
    0,0,143,
    0,0,159,
    0,0,175,
    0,0,191,
    0,0,207,
    0,0,223,
    0,0,239,
    0,0,255,
    0,15,255,
    0,31,255,
    0,47,255,
    0,63,255,
    0,79,255,
    0,95,255,
    0,111,255,
    0,127,255,
    0,143,255,
    0,159,255,
    0,175,255,
    0,191,255,
    0,207,255,
    0,223,255,
    0,239,255,
    0,255,255,
    15,255,239,
    31,255,223,
    47,255,207,
    63,255,191,
    79,255,175,
    95,255,159,
    111,255,143,
    127,255,127,
    143,255,111,
    159,255,95,
    175,255,79,
    191,255,63,
    207,255,47,
    223,255,31,
    239,255,15,
    255,255,0,
    255,239,0,
    255,223,0,
    255,207,0,
    255,191,0,
    255,175,0,
    255,159,0,
    255,143,0,
    255,127,0,
    255,111,0,
    255,95,0,
    255,79,0,
    255,63,0,
    255,47,0,
    255,31,0,
    255,15,0,
    255,0,0,
    239,0,0,
    223,0,0,
    207,0,0,
    191,0,0,
    175,0,0,
    159,0,0,
    143,0,0,
    127,0,0,
};

const uint8 ColorMap::BLACKANDWHITE[] = {
    0,0,0,
    4,4,4,
    8,8,8,
    12,12,12,
    16,16,16,
    20,20,20,
    24,24,24,
    28,28,28,
    32,32,32,
    36,36,36,
    40,40,40,
    44,44,44,
    48,48,48,
    52,52,52,
    56,56,56,
    60,60,60,
    65,65,65,
    69,69,69,
    73,73,73,
    77,77,77,
    81,81,81,
    85,85,85,
    89,89,89,
    93,93,93,
    97,97,97,
    101,101,101,
    105,105,105,
    109,109,109,
    113,113,113,
    117,117,117,
    121,121,121,
    125,125,125,
    130,130,130,
    134,134,134,
    138,138,138,
    142,142,142,
    146,146,146,
    150,150,150,
    154,154,154,
    158,158,158,
    162,162,162,
    166,166,166,
    170,170,170,
    174,174,174,
    178,178,178,
    182,182,182,
    186,186,186,
    190,190,190,
    195,195,195,
    199,199,199,
    203,203,203,
    207,207,207,
    211,211,211,
    215,215,215,
    219,219,219,
    223,223,223,
    227,227,227,
    231,231,231,
    235,235,235,
    239,239,239,
    243,243,243,
    247,247,247,
    251,251,251,
    255,255,255,
};
    

const uint8 ColorMap::PURPLE[] = {
    0,0,0,
    12,1,22,
    24,3,45,
    36,4,68,
    48,6,91,
    61,8,114,
    73,9,137,
    85,11,160,
    97,12,183,
    110,14,206,
    122,16,228,
    128,17,215,
    133,19,201,
    139,20,188,
    144,21,175,
    150,23,161,
    155,24,148,
    161,26,134,
    166,27,121,
    172,29,107,
    177,30,94,
    183,32,80,
    189,33,67,
    194,35,53,
    200,36,40,
    205,38,26,
    211,39,13,
    216,41,0,
    219,53,0,
    221,65,0,
    223,76,0,
    225,88,0,
    227,100,0,
    229,112,0,
    232,124,0,
    234,136,0,
    236,148,0,
    238,160,0,
    240,172,0,
    242,184,0,
    245,196,0,
    247,208,0,
    249,220,0,
    251,232,0,
    253,244,0,
    255,255,0,
    255,255,14,
    255,255,28,
    255,255,42,
    255,255,56,
    255,255,71,
    255,255,85,
    255,255,99,
    255,255,113,
    255,255,127,
    255,255,142,
    255,255,156,
    255,255,170,
    255,255,184,
    255,255,199,
    255,255,213,
    255,255,227,
    255,255,241,
    255,255,255,
//    0,0,0,
//    9,1,17,
//    18,2,35,
//    28,3,52,
//    37,4,70,
//    47,6,88,
//    56,7,105,
//    65,8,123,
//    75,9,140,
//    84,11,158,
//    94,12,176,
//    103,13,193,
//    113,14,211,
//    122,16,228,
//    127,17,217,
//    131,18,206,
//    136,19,194,
//    141,21,183,
//    146,22,171,
//    150,23,160,
//    155,24,148,
//    160,26,137,
//    164,27,125,
//    169,28,114,
//    174,29,103,
//    179,31,91,
//    183,32,80,
//    188,33,68,
//    193,34,57,
//    197,36,45,
//    202,37,34,
//    207,38,22,
//    212,39,11,
//    216,41,0,
//    218,48,0,
//    219,55,0,
//    220,62,0,
//    222,69,0,
//    223,76,0,
//    224,84,0,
//    225,91,0,
//    227,98,0,
//    228,105,0,
//    229,112,0,
//    231,119,0,
//    232,127,0,
//    233,134,0,
//    235,141,0,
//    236,148,0,
//    237,155,0,
//    239,162,0,
//    240,170,0,
//    241,177,0,
//    242,184,0,
//    244,191,0,
//    245,198,0,
//    246,205,0,
//    248,213,0,
//    249,220,0,
//    250,227,0,
//    252,234,0,
//    253,241,0,
//    254,248,0,
//    255,255,0,
};




